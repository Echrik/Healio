@page
@model Healio.Pages.ScheduleModel
@{
    ViewData["Title"] = "Időpontbeosztás";

    var dayOrder = new Dictionary<string, int>
    {
        { "Monday", 1 },
        { "Tuesday", 2 },
        { "Wednesday", 3 },
        { "Thursday", 4 },
        { "Friday", 5 },
        { "Saturday", 6 },
        { "Sunday", 7 }
    };
}

@section Styles {
    <link rel="stylesheet" href="~/css/schedule.css" />
}

<div class="schedule-container">
    <h2>Időpontbeosztás Hozzáadása</h2>

    <form method="post" class="schedule-form">
        <div>
            <label for="dayOfWeek">Nap:</label>
            <select id="dayOfWeek" asp-for="DayOfWeek" required>
                @foreach (var day in Model.DaysOfWeek)
                {
                    <option value="@day">@day</option>
                }
            </select>
            <span asp-validation-for="DayOfWeek" class="text-danger"></span>
        </div>

        <div>
            <label for="startTime">Kezdés:</label>
            <input id="startTime" type="time" asp-for="StartTime" required />
            <span asp-validation-for="StartTime" class="text-danger"></span>
        </div>

        <div>
            <label for="endTime">Befejezés:</label>
            <input id="endTime" type="time" asp-for="EndTime" required />
            <span asp-validation-for="EndTime" class="text-danger"></span>
        </div>

        <button type="submit">Mentés</button>
    </form>

    @if (Model.Schedules.Count() > 0)
    {
        <table class="schedule-table">
            <thead>
                <tr>
                    <th>Nap</th>
                    <th>Kezdés</th>
                    <th>Befejezés</th>
                    <th>Törlés</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var s in Model.Schedules.OrderBy(x => dayOrder[x.DayOfWeek]))
                {
                    <tr>
                        <td>@s.DayOfWeek</td>
                        <td>@s.StartTime.ToString("hh\\:mm")</td>
                        <td>@s.EndTime.ToString("hh\\:mm")</td>
                        <td><a asp-page-handler="DeleteSchedule" asp-route-day="@s.DayOfWeek">🗑️</a></td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="no-schedules">Nincs még felvitt időpont.</p>
    }
</div>

@section Scripts {
    <script>
        const startTime = document.getElementById("startTime");
        const endTime = document.getElementById("endTime");

        function roundTimeInput(event) {
            const input = event.target;
            let [hour, minute] = input.value.split(':').map(Number);

            if (minute < 30) {
                minute = 30;
            } else {
                minute = 0;
                hour = (hour + 1) % 24;
            }

            input.value = String(hour).padStart(2, '0') + ':' + String(minute).padStart(2, '0');
        }

        startTime.addEventListener('change', roundTimeInput);
        endTime.addEventListener('change', roundTimeInput);

        endTime.addEventListener('change', e => {
            const [eHour, eMin] = e.target.value.split(':').map(Number);
            const [sHour, sMin] = startTime.value.split(':').map(Number);
            if (eHour < sHour || (eHour === sHour && eMin <= sMin)) {
                e.target.value = startTime.value;
            }
        });

        startTime.addEventListener('change', e => {
            const [sHour, sMin] = e.target.value.split(':').map(Number);
            const [eHour, eMin] = endTime.value.split(':').map(Number);
            if (sHour > eHour || (sHour === eHour && sMin >= eMin)) {
                e.target.value = endTime.value;
            }
        });

        document.addEventListener('DOMContentLoaded', () => {
            endTime.value = '23:30';
        });
    </script>
}
